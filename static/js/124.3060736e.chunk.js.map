{"version":3,"file":"static/js/124.3060736e.chunk.js","mappings":"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","sources":["components/forms/LoginForm.jsx","components/forms/EmailOtpForm.jsx","pages/Auth.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { authAction, formAction, userDataAction } from \"../../slices/authSlice\";\r\nimport { loaderAction } from \"../../slices/modalSlice\";\r\nimport { loginService } from \"../../services/login.service\";\r\n\r\nexport default function LoginForm() {\r\n\r\n   const dispath = useDispatch();\r\n   const navigate = useNavigate();\r\n\r\n   const loginHandler = async (evt) => {\r\n      evt.preventDefault();\r\n      const { email, password } = evt.target;\r\n      dispath(loaderAction({ loader: true }));\r\n\r\n      try {\r\n         const response= await loginService({ email: email.value, password: password.value });\r\n         dispath(userDataAction({ token: response.userData.token, name: response.userData.name }));\r\n         dispath(authAction(true));\r\n         navigate(\"/home\");\r\n      } catch ({ message }) {\r\n         toast.error(message);\r\n      }\r\n      dispath(loaderAction({ loader: false }))\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <form onSubmit={loginHandler} className=\"flex flex-col gap-3\">\r\n            <div className=\"w-full flex flex-col relative pt-3\">\r\n               <input required name=\"email\" className=\"outline-none rounded-md border-2 focus:border-2 focus:border-[#f5ba13] p-2\" type=\"email\" placeholder=\"Email\" />\r\n               <label className=\"text-xs ml-3 font-semibold duration-300\">Email</label>\r\n            </div>\r\n            <div className=\"w-full flex flex-col relative pt-3\">\r\n               <input required minLength={7} name=\"password\" autoComplete=\"off\" className=\"outline-none rounded-md border-2 focus:border-2 focus:border-[#f5ba13] p-2\" type=\"password\" placeholder=\"Password\" />\r\n               <label className=\"ml-3 duration-300 font-semibold text-xs\">Password</label>\r\n            </div>\r\n            <button type=\"submit\" className=\"w-fit duration-100 shadow-lg p-2 px-3 text-white rounded-lg bg-green-600 hover:bg-green-500\">Login</button>\r\n         </form>\r\n         <p>Dont have an account? <span onClick={() => dispath(formAction({ formType: \"signup\" }))} className=\"cursor-pointer text-blue-600 relative underlineAnime\">Sign Up!</span></p>\r\n         <p onClick={() => dispath(formAction({ formType: \"otpLogin\" }))} className=\"text-blue-600 w-fit relative underlineAnime cursor-pointer hoverAr\">Login using OTP <i className=\"fa-solid duration-500 fa-arrow-right child:text-red-400\"></i></p>\r\n         <p onClick={() => navigate(\"/home\")} className=\"text-blue-600 w-fit relative underlineAnime cursor-pointer hoverAr\">Continue as Guest <i className=\"fa-solid duration-500 fa-arrow-right child:text-red-400\"></i></p>\r\n      </>\r\n   );\r\n}","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { authAction, formAction, getFormType, userDataAction } from \"../../slices/authSlice\";\r\nimport { loaderAction } from \"../../slices/modalSlice\";\r\n\r\nimport { confirmOtpService, deleteOtpService, reqOtpService } from \"../../services/login.service\";\r\nimport { updateProfileService } from \"../../services/data.service\";\r\nimport PasswordInputs from \"../UI/PasswordInputs\";\r\n\r\nexport default function EmailOtpForm() {\r\n   const [otpState, setOtpState] = useState(false);\r\n   const [updatePass, setUpdatePass] = useState(false);\r\n\r\n   const [email, setEmail] = useState(\"\");\r\n   const [name, setName] = useState(\"\");\r\n\r\n   const formType = useSelector(getFormType);\r\n\r\n   const dispath = useDispatch();\r\n   const navigate = useNavigate();\r\n\r\n   const reqOtp = async (evt) => {\r\n      evt.preventDefault();\r\n      if (formType !== \"otpLogin\") {\r\n         setName(evt.target.name.value);\r\n      }\r\n      setEmail(evt.target.email.value);\r\n      dispath(loaderAction({ loader: true }));\r\n      try {\r\n         const response = await reqOtpService({ email: evt.target.email.value, type: formType===\"otpLogin\" });\r\n         toast.success(response.message);\r\n         setOtpState(true);\r\n      } catch (error) {\r\n         toast.error(error.message);\r\n      }\r\n      dispath(loaderAction({ loader: false }));\r\n   }\r\n\r\n   const confirmOtp = async (evt) => {\r\n      evt.preventDefault();\r\n      dispath(loaderAction({ loader: true }));\r\n      try {\r\n         const response = await confirmOtpService({ email, otp: evt.target.otp.value, name, type: formType===\"otpLogin\" });\r\n         localStorage.setItem(\"notehubData\", { token: response?.userData?.token, name: response?.response?.name });\r\n         toast.success(response.message);\r\n         dispath(userDataAction({ token: response?.userData?.token, name: response?.userData?.name }));\r\n         dispath(authAction(true));\r\n         if (formType === \"otpLogin\") {\r\n            navigate(\"/home\");\r\n         } else {\r\n            setUpdatePass(true);\r\n         }\r\n      } catch (error) {\r\n         toast.error(error.message);\r\n      }\r\n      dispath(loaderAction({ loader: false }));\r\n   }\r\n\r\n   const wrongEmailHandler = async () => {\r\n      try {\r\n         setOtpState(false);\r\n         await deleteOtpService({ email, type: formType===\"otpLogin\" });\r\n      } catch ({ message }) {\r\n         toast.error(message);\r\n      }\r\n   }\r\n\r\n   const updatePassword = async (evt) => {\r\n      evt.preventDefault();\r\n      const { initPassword, password } = evt.target;\r\n      if (password.value < 7) {\r\n         toast.error(\"Please choose a stronger password!\");\r\n         return;\r\n      }\r\n      if (initPassword.value !== password.value) {\r\n         toast.error(\"Incorrect password!\");\r\n         return;\r\n      }\r\n      dispath(loaderAction({ loader: true }));\r\n      try {\r\n         const response = await updateProfileService({ password: evt.target.password.value });\r\n         toast.success(response?.message);\r\n         navigate(\"/home\");\r\n      } catch (error) {\r\n         toast.error(error?.message);\r\n      }\r\n      dispath(loaderAction({ loader: false }));\r\n   }\r\n\r\n   return(\r\n      <>\r\n         {updatePass ?\r\n            <>\r\n               <p className=\"w-full text-right text-blue-600\">\r\n                  <span onClick={() => navigate(\"/home\")} className=\"w-fit underlineAnime relative cursor-pointer hoverAr\">\r\n                     Skip for now? <i className=\"fa-solid duration-500 fa-arrow-right\"></i> \r\n                  </span>\r\n               </p>\r\n               <form onSubmit={updatePassword} className=\"flex flex-col gap-3\">\r\n                  <PasswordInputs />\r\n                  <button className=\"duration-500 w-fit p-2 text-white rounded-lg bg-green-600 hover:bg-green-500\" type=\"submit\">Confirm</button>\r\n               </form>\r\n            </>\r\n            :\r\n            <>\r\n               <p className=\"w-full text-right text-blue-600\">\r\n                  <span onClick={() => dispath(formAction({ formType: \"login\" }))} className=\"w-fit underlineAnime relative after:right-0 after:left-auto cursor-pointer hoverAl\">\r\n                     <i className=\"fa-solid duration-500 fa-arrow-left\"></i> Back\r\n                  </span>\r\n               </p>\r\n               <form onSubmit={otpState ? confirmOtp : reqOtp} className=\"flex flex-col gap-2\">\r\n                  {formType === \"signup\" &&\r\n                     <div className=\"flex flex-col w-full relative pt-3\">\r\n                        <input disabled={otpState} required minLength={3} name=\"name\" type=\"text\" className=\"outline-none border-2 rounded-md focus:border-2 focus:border-[#f5ba13] p-2\" placeholder=\"Name\"/>\r\n                        <label>Name</label>\r\n                     </div>\r\n                  }\r\n                  <div className=\"flex flex-col w-full relative pt-3\">\r\n                     <input required disabled={otpState} className=\"outline-none border-2 rounded-md focus:border-2 focus:border-[#f5ba13] p-2\" type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n                     <label>Email</label>\r\n                  </div>\r\n                  <button className={ `${otpState && \"hide\"} w-fit p-2 text-white rounded-lg bg-green-600 hover:bg-green-500`} type=\"submit\" name=\"button\">Send OTP</button>\r\n                  \r\n                  <div className={`${!otpState && \"hidden\"} flex flex-col w-full relative pt-3`}>\r\n                     <input className=\"duration-500 outline-none border-2 rounded-md focus:border-2 focus:border-[#f5ba13] p-2\" type=\"number\" name=\"otp\" placeholder=\"OTP\"/>\r\n                     <label>OTP</label>\r\n                  </div>\r\n                  \r\n                  <button className={`${!otpState && \"hide\"} duration-500 w-fit p-2 text-white rounded-lg bg-green-600 hover:bg-green-500`} type=\"submit\">{formType === \"otpLogin\" ? \"Login\" : \"Confirm\"}</button>\r\n               </form>\r\n\r\n               <p onClick={wrongEmailHandler} className={`${!otpState && \"hide\"} underlineAnime relative duration-500 cursor-pointer w-fit text-blue-600`}>Wrong Email?</p>\r\n            </>\r\n         }\r\n      </>\r\n   );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { getLoaderState } from \"../slices/modalSlice\";\r\nimport { getFormType } from \"../slices/authSlice\";\r\nimport { useLoaderData, useNavigate } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../components/UI/Navbar\";\r\nimport Loader from \"../components/UI/Loader\";\r\nimport LoginForm from \"../components/forms/LoginForm\";\r\nimport EmailOtpForm from \"../components/forms/EmailOtpForm\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Auth() {\r\n  const loaderData = useLoaderData();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (loaderData) {\r\n      console.log(loaderData);\r\n      navigate(\"/home\");\r\n    }\r\n  }, []);\r\n\r\n  const loaderState = useSelector(getLoaderState);\r\n  const formType = useSelector(getFormType);\r\n  return (\r\n    <>\r\n      {loaderState && <Loader />}\r\n      <div className=\"w-screen relative h-screen overflow-x-hidden gap-y-5 py-7 lg:py-0 overflow-y-auto flex flex-col justify-center items-center\">\r\n        <Navbar />\r\n        <div className=\"boxShadow bg-white text-sm mt-44 lg:mt-32 duration-1000 sm:text-base lg:text-lg p-6 w-[90%] md:w-1/2 lg:w-2/5 rounded-md flex flex-col gap-4\">\r\n          {formType === \"login\" && <LoginForm />}\r\n          {(formType === \"signup\" || formType === \"otpLogin\") && (\r\n            <EmailOtpForm />\r\n          )}\r\n        </div>\r\n        <div className=\"h-fit boxShadow duration-300 p-3 rounded-lg bg-gray-200 w-[90%] md:w-1/2 lg:w-2/5\">\r\n          <p className=\" sm:text-base lg:text-lg\">\r\n            <span className=\"text-red-700 font-semibold text-lg\">Notice: </span>\r\n            We are currently experiencing a slight issue with our backend\r\n            system. As a result, our login feature is temporarily unavailable.\r\n            However, you can still continue to browse our website as a{\" \"}\r\n            <span className=\"text-green-700 font-semibold\">Guest</span> and even\r\n            add notes, which will be backed up once you sign in. We apologize\r\n            for any inconvenience this may cause and our team is working to\r\n            resolve the issue as quickly as possible. Thank you for your\r\n            patience and understanding.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function loader() {\r\n  const token = JSON.parse(localStorage.getItem(\"notehubData\"))?.token;\r\n  if (!token) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n"],"names":["LoginForm","dispath","useDispatch","navigate","useNavigate","loginHandler","evt","preventDefault","target","email","password","loaderAction","loader","loginService","value","response","userDataAction","token","userData","name","authAction","message","toast","onSubmit","className","required","type","placeholder","minLength","autoComplete","onClick","formAction","formType","EmailOtpForm","useState","otpState","setOtpState","updatePass","setUpdatePass","setEmail","setName","useSelector","getFormType","reqOtp","reqOtpService","confirmOtp","confirmOtpService","otp","localStorage","setItem","wrongEmailHandler","deleteOtpService","updatePassword","initPassword","updateProfileService","PasswordInputs","disabled","Auth","loaderData","useLoaderData","useEffect","console","log","loaderState","getLoaderState","Loader","Navbar","JSON","parse","getItem"],"sourceRoot":""}